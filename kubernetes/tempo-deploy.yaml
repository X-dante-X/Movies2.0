apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tempo
  template:
    metadata:
      labels:
        app: tempo
    spec:
      containers:
        - name: tempo
          image: grafana/tempo:latest
          args: ["-config.file=/etc/tempo/tempo-config.yml"]
          ports:
            - containerPort: 3200
            - containerPort: 4317
          volumeMounts:
            - name: tempo-config
              mountPath: /etc/tempo/tempo-config.yml
              subPath: tempo-config.yml
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: tempo-config
          configMap:
            name: tempo-config
---
apiVersion: v1
kind: Service
metadata:
  name: tempo
spec:
  selector:
    app: tempo
  ports:
    - protocol: TCP
      name: http-listen-port
      port: 3200
      targetPort: 3200
    - protocol: TCP
      name: grpc
      port: 4317
      targetPort: 4317
  type: ClusterIP 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempo-config
data:
  tempo-config.yml: |
    stream_over_http_enabled: true
    server:
      http_listen_port: 3200
      log_level: info

    query_frontend:
      search:
        duration_slo: 5s
        throughput_bytes_slo: 1.073741824e+09
        metadata_slo:
            duration_slo: 5s
            throughput_bytes_slo: 1.073741824e+09
      trace_by_id:
        duration_slo: 5s

    distributor:
      receivers:                           
        jaeger:
          protocols:
            thrift_http:
            grpc:
            thrift_binary:
            thrift_compact:
        zipkin:
        otlp:
          protocols:
            http:
            grpc:
        opencensus:

    ingester:
      max_block_duration: 5m

    compactor:
      compaction:
        block_retention: 1h

    metrics_generator:
      registry:
        external_labels:
          source: tempo
          cluster: docker-compose
      storage:
        path: /var/tempo/generator/wal
        remote_write:
          - url: http://prometheus:9090/api/v1/write
            send_exemplars: true
      traces_storage:
        path: /var/tempo/generator/traces

    storage:
      trace:
        backend: local
        wal:
          path: /var/tempo/wal
        local:
          path: /var/tempo/blocks

    overrides:
      defaults:
        metrics_generator:
          processors: [service-graphs, span-metrics, local-blocks]
          generate_native_histograms: both
